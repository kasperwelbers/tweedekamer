% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/odata.R
\name{tk_expand}
\alias{tk_expand}
\title{Join with another entity}
\usage{
tk_expand(tk_url, entities, relation = NULL)
}
\arguments{
\item{tk_url}{A tk_url_builder object (the output of tk_entity)}

\item{entities}{The entity (or a vector of entities) to join with.}

\item{relation}{filter on a relation attribute.}
}
\description{
Join the entity with another entity.
See documentation on [website](https://opendata.tweedekamer.nl/documentatie/odata-api) for valid relations.
For example, if you go to [ZaakActor](https://opendata.tweedekamer.nl/documentatie/zaakactor), you see that it has a relation to 'Zaak',
and in the relation attributes you see that you can join on "Gericht aan", "Indiener", etc.
So we can join the entity 'Zaak' with 'ZaakActor' on 'Indiener' (see example below).
}
\examples{

# The following code joins Zaak on ZaakActor, but including all relations (Indiener, Gericht aan, etc)
tk_entity('zaak') \%>\%
 tk_expand('ZaakActor') \%>\%
 tk_list(limit=5)

# We can filter on a specific relation, for example 'Indiener':
tk_entity('zaak') \%>\%
 tk_expand('ZaakActor', relation='Indiener') \%>\%
 tk_list(limit=5)

# Note that the nr of results is the same even when filtering on relation.
# This is because the joined entity is nested in the results

# You cannot filter the results based on the nexted entity. If you want to get all "Zaak" items
# only for a particular ZaakActor, turn the query around
tk_entity('ZaakActor') \%>\%
   tk_expand('Zaak') \%>\%
   tk_filter(by_string('Relatie', 'eq', 'Indiener')) \%>\%
   tk_list(limit=5)
}
